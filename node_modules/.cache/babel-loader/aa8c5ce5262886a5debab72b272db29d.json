{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\webstormprojects\\\\React\\\\country\\\\country-ts\\\\src\\\\components\\\\search\\\\SearchCountry.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form } from \"./Form\";\nimport { SearchResults } from \"./SearchResults\";\nimport { LoadAnimate } from \"./LoadAnimate\";\nimport \"./SearchCountry.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchCountry = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getData = async () => {\n    const res = await fetch(`https://restcountries.com/v3.1/name/${name}`);\n    const rawData = (await res.json())[0];\n\n    if (rawData === undefined) {\n      setIsLoading(false);\n      return;\n    }\n\n    setData({\n      countryName: rawData.name.common,\n      capital: rawData.capital,\n      coatOfArms: rawData.coatOfArms.png,\n      flag: rawData.flags.png,\n      languages: Object.values(rawData.languages),\n      latitude: rawData.latlng[0],\n      longitude: rawData.latlng[1],\n      subregion: rawData.subregion\n    });\n    setIsLoading(false);\n  };\n\n  const giveName = newName => {\n    if (newName !== name) {\n      setIsLoading(true);\n      setData(null);\n      setName(newName);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (name !== \"\") await getData();\n    })();\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      giveName: giveName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), data && /*#__PURE__*/_jsxDEV(SearchResults, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadAnimate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\n_s(SearchCountry, \"657SO1k5euIomWQUDnV2l7NzXcg=\");\n\n_c = SearchCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCountry\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/webstormprojects/React/country/country-ts/src/components/search/SearchCountry.tsx"],"names":["React","useEffect","useState","Form","SearchResults","LoadAnimate","SearchCountry","data","setData","name","setName","isLoading","setIsLoading","getData","res","fetch","rawData","json","undefined","countryName","common","capital","coatOfArms","png","flag","flags","languages","Object","values","latitude","latlng","longitude","subregion","giveName","newName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAkB,IAAlB,CAA/B;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAS,EAAT,CAA7B;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAAyBV,QAAQ,CAAU,KAAV,CAAvC;;AAEA,QAAMW,OAAO,GAAG,YAAY;AACxB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uCAAsCN,IAAK,EAA7C,CAAvB;AACA,UAAMO,OAAO,GAAG,CAAC,MAAMF,GAAG,CAACG,IAAJ,EAAP,EAAmB,CAAnB,CAAhB;;AACA,QAAGD,OAAO,KAAGE,SAAb,EAAuB;AACnBN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACH;;AACDJ,IAAAA,OAAO,CAAC;AACJW,MAAAA,WAAW,EAACH,OAAO,CAACP,IAAR,CAAaW,MADrB;AAEJC,MAAAA,OAAO,EAACL,OAAO,CAACK,OAFZ;AAGJC,MAAAA,UAAU,EAACN,OAAO,CAACM,UAAR,CAAmBC,GAH1B;AAIJC,MAAAA,IAAI,EAACR,OAAO,CAACS,KAAR,CAAcF,GAJf;AAKJG,MAAAA,SAAS,EAACC,MAAM,CAACC,MAAP,CAAcZ,OAAO,CAACU,SAAtB,CALN;AAMJG,MAAAA,QAAQ,EAACb,OAAO,CAACc,MAAR,CAAe,CAAf,CANL;AAOJC,MAAAA,SAAS,EAACf,OAAO,CAACc,MAAR,CAAe,CAAf,CAPN;AAQJE,MAAAA,SAAS,EAAChB,OAAO,CAACgB;AARd,KAAD,CAAP;AAUApB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAlBD;;AAoBA,QAAMqB,QAAQ,GAAIC,OAAD,IAAoB;AACjC,QAAGA,OAAO,KAAGzB,IAAb,EAAkB;AACdG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,OAAO,CAACwB,OAAD,CAAP;AACH;AACJ,GAND;;AAQAjC,EAAAA,SAAS,CAAC,MAAI;AACV,KAAC,YAAS;AACN,UAAGQ,IAAI,KAAG,EAAV,EAAa,MAAMI,OAAO,EAAb;AAChB,KAFD;AAGH,GAJQ,EAIP,CAACJ,IAAD,CAJO,CAAT;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACH,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEwB;AAAhB;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA;AAAA;AAAA;AAAA,YAFG,EAIC1B,IAAI,iBAAI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAJT,EAOCI,SAAS,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH,CApDM;;GAAML,a;;KAAAA,a","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {CityEntity} from \"../../types/city\";\r\nimport {Form} from \"./Form\";\r\nimport {SearchResults} from \"./SearchResults\";\r\nimport {LoadAnimate} from \"./LoadAnimate\";\r\nimport \"./SearchCountry.css\";\r\n\r\nexport const SearchCountry = () => {\r\n\r\n    const [data,setData] = useState<CityEntity|null>(null);\r\n    const [name,setName]=useState<string>(\"\");\r\n    const [isLoading,setIsLoading]=useState<boolean>(false);\r\n\r\n    const getData = async () => {\r\n        const res = await fetch(`https://restcountries.com/v3.1/name/${name}`);\r\n        const rawData = (await res.json())[0];\r\n        if(rawData===undefined){\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        setData({\r\n            countryName:rawData.name.common,\r\n            capital:rawData.capital,\r\n            coatOfArms:rawData.coatOfArms.png,\r\n            flag:rawData.flags.png,\r\n            languages:Object.values(rawData.languages),\r\n            latitude:rawData.latlng[0],\r\n            longitude:rawData.latlng[1],\r\n            subregion:rawData.subregion\r\n        })\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const giveName = (newName:string) => {\r\n        if(newName!==name){\r\n            setIsLoading(true);\r\n            setData(null);\r\n            setName(newName);\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(name!==\"\")await getData();\r\n        })();\r\n    },[name])\r\n\r\n\r\n    return <div className=\"app-container\">\r\n        <Form giveName={giveName}/>\r\n        <br/>\r\n        {\r\n            data && <SearchResults data={data}/>\r\n        }\r\n        {\r\n            isLoading && <LoadAnimate/>\r\n        }\r\n    </div>\r\n\r\n}"]},"metadata":{},"sourceType":"module"}