{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\webstormprojects\\\\React\\\\country\\\\country-ts\\\\src\\\\components\\\\search\\\\LanguagesString.tsx\";\nimport React from \"react\";\nimport \"./results.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LanguagesString = props => {\n  const languageString = props.languages.join(\", \");\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"languageTable\",\n    children: /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: props.languages.map(lang => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: lang\n          }, lang, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n_c = LanguagesString;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagesString\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/webstormprojects/React/country/country-ts/src/components/search/LanguagesString.tsx"],"names":["React","LanguagesString","props","languageString","languages","join","map","lang"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAMA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAmB;AAC9C,QAAMC,cAAc,GAACD,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqB,IAArB,CAArB;AACA,sBAAO;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA,2BACH;AAAA,6BACA;AAAA,kBAEQH,KAAK,CAACE,SAAN,CAAgBE,GAAhB,CAAoBC,IAAI,IAAE;AACtB,8BAAO;AAAA,sBACFA;AADE,aAASA,IAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGH,SAJD;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CAjBM;KAAMN,e","sourcesContent":["import React from \"react\";\r\nimport \"./results.css\";\r\n\r\ninterface Props {\r\n    languages:string[];\r\n}\r\n\r\nexport const LanguagesString = (props : Props) => {\r\n    const languageString=props.languages.join(\", \");\r\n    return <table className=\"languageTable\">\r\n        <thead>\r\n        <tr>\r\n            {\r\n                props.languages.map(lang=>{\r\n                    return <th key={lang}>\r\n                        {lang}\r\n                    </th>\r\n                })\r\n            }\r\n        </tr>\r\n\r\n        </thead>\r\n\r\n    </table>\r\n}"]},"metadata":{},"sourceType":"module"}