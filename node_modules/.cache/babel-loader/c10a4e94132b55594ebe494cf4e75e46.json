{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\Desktop\\\\webstormprojects\\\\React\\\\TS-country\\\\country-ts\\\\src\\\\components\\\\search\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = props => {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n\n  const sendCity = () => {\n    props.giveName(city);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: sendCity,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: [\"Type city name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setCity(e.target.value),\n        value: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Form, \"9zwktreZ6tPXqd2LEZLhtKNXs5w=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/lukas/Desktop/webstormprojects/React/TS-country/country-ts/src/components/search/Form.tsx"],"names":["React","useState","Form","props","city","setCity","sendCity","giveName","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAMA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAiB;AAAA;;AAEjC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAS,EAAT,CAA/B;;AAEA,QAAMK,QAAQ,GAAG,MAAM;AACnBH,IAAAA,KAAK,CAACI,QAAN,CAAeH,IAAf;AACH,GAFD;;AAIA,sBAAO;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEE,QAA1B;AAAA,2BACC;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA,gDAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,EAAEE,CAAC,IAAEH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAFxB;AAGI,QAAA,KAAK,EAAEN;AAHX;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH,CArBM;;GAAMF,I;;KAAAA,I","sourcesContent":["import React, {useState} from \"react\";\r\n\r\ninterface Props {\r\n    giveName:(name:string)=>void;\r\n}\r\n\r\nexport const Form = (props:Props) => {\r\n\r\n    const [city,setCity] = useState<string>(\"\");\r\n    \r\n    const sendCity = () => {\r\n        props.giveName(city)\r\n    }\r\n\r\n    return <form action=\"\" onSubmit={sendCity}>\r\n            <label htmlFor=\"\">\r\n                Type city name\r\n                <br/>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={e=>setCity(e.target.value)}\r\n                    value={city}\r\n                />\r\n                <button type=\"submit\">Confirm</button>\r\n            </label>\r\n        </form>\r\n\r\n}"]},"metadata":{},"sourceType":"module"}